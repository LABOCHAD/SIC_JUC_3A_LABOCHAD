<Window x:Class="Abschlussprojekt_Wochenplaner.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
        xmlns:local="clr-namespace:Abschlussprojekt_Wochenplaner.Views" 
        
        xmlns:controls="clr-namespace:System.Windows.Controls.Primitives;assembly=PresentationFramework"
        xmlns:vm="clr-namespace:Abschlussprojekt_Wochenplaner.ViewModels"
        Title="Wochenplaner" MinWidth="1000" MinHeight="500" ScrollViewer.VerticalScrollBarVisibility="Disabled" Width="1000" Height="500">
    <!-- PresentationFramework for UniForm Grid and ItemControll-->
    <!--xmlns = xml name space xmlns: ABC = using namespace ABC -->

    <!-- This way might be more MVVM conform, but it triggers the VM to be loaded twice (Design/Runtime) - Realtime reactive, even at Design Time
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    -->



    <!-- As an more modern alternative than setting datacontext in views cs code behind -->

    <Grid x:Name="grid_container">

        <Grid x:Name="grid_content" Background="#FF4472C4" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>


            <Border x:Name="border_NewBoard" Style="{StaticResource BoardStyle}" Grid.Row="0" Grid.Column="0">
                <Button x:Name="button_NewBoard" Content="Neues Board" BorderThickness="0" Padding="0" Background="{x:Null}"  Margin="5,5,5,5" FontFamily="Calibri" FontSize="20" FontWeight="Bold" Command="{Binding ClickedButtonNewBoard}" />
            </Border>

            <Border x:Name="border_Infopanel" Style="{StaticResource BoardStyle}" Grid.Row="0" Grid.Column="1" >
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <!--later Button for previous week, if exists-->
                    <!-- TODO Make Binding to board later-->
                    <TextBlock Name="textblock_YearCaption" Text="   Jahr:" Style="{StaticResource InfoTextBlockStyle}"/>
                    <TextBlock Name="textblock_YearContent" Text="{Binding}" 
                               Style="{StaticResource InfoTextBlockStyle}" DataContext="{Binding CurrentBoard.Year}"/>
                    <TextBlock Name="textblock_WeekCaption" Text="   Woche:" Style="{StaticResource InfoTextBlockStyle}"/>
                    <TextBlock Name="textblock_WeekContent" Text="{Binding}" 
                               Style="{StaticResource InfoTextBlockStyle}" DataContext="{Binding CurrentBoard.Week}"/>
                    <TextBlock Name="textblock_DateFromCaption" Text="   Von:" Style="{StaticResource InfoTextBlockStyle}"/>
                    <TextBlock x:Name="textblock_DateFromContent" Text="{Binding StringFormat='{}{0:dd.MM.}'}" 
                               Style="{StaticResource InfoTextBlockStyle}" DataContext="{Binding CurrentBoard.FromDate}"/>
                    <TextBlock Name="textblock_DateToCaption" Text="   Bis:" Style="{StaticResource InfoTextBlockStyle}"/>
                    <TextBlock Name="textblock_DateToContent" Text="{Binding StringFormat='{}{0:dd.MM.}'}" 
                               Style="{StaticResource InfoTextBlockStyle}" DataContext="{Binding CurrentBoard.ToDate}"/>
                    <!--later Button for next week, if exists-->

                </StackPanel>

            </Border>

            <Border x:Name="border_Buttons_Grid" Style="{StaticResource BoardStyle}" Grid.Row="1" Grid.Column="0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Button Content="hinzufügen" Background="#FFC00000" Style="{StaticResource LeftActionButtonStyle}" Grid.Row="0" Command="{Binding ClickedButtonAddCommand}" />
                    <Button Content="bearbeiten" Background="#FFED7D31" Style="{StaticResource LeftActionButtonStyle}" Grid.Row="1" Command="{Binding ClickedButtonEditCommand}" />
                    <Button Content="löschen" Background="#FFFFC000" Style="{StaticResource LeftActionButtonStyle}" Grid.Row="2" Command="{Binding ClickedButtonDeleteCommand}" />
                    <Button Content="verschieben" Background="#FF70AD47" Style="{StaticResource LeftActionButtonStyle}" Grid.Row="3" Command="{Binding ClickedButtonMoveCommand}" />
                    <Button Content="kopieren" Background="#FF5B9BD5" Style="{StaticResource LeftActionButtonStyle}" Grid.Row="4" Command="{Binding ClickedButtonCopyCommand}" />
                    <Button Content="erledigt" Background="#FF4472C4" Style="{StaticResource LeftActionButtonStyle}" Grid.Row="5" Command="{Binding ClickedButtonDoneCommand}" />
                    <Button Content="nicht geschafft" Background="#FF7030A0" Style="{StaticResource LeftActionButtonStyle}" Grid.Row="6" Command="{Binding ClickedButtonFailCommand}" />
                </Grid>
            </Border>

            <Border x:Name="border_Whiteboard_Table" Style="{StaticResource BoardStyle}" Grid.Row="1" Grid.Column="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="1" Text="Montag" Style="{StaticResource WeekdayHeaderTextBlockStyle}"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Dienstag" Style="{StaticResource WeekdayHeaderTextBlockStyle}"/>
                    <TextBlock Grid.Row="0" Grid.Column="3" Text="Mittwoch" Style="{StaticResource WeekdayHeaderTextBlockStyle}"/>
                    <TextBlock Grid.Row="0" Grid.Column="4" Text="Donnerstag" Style="{StaticResource WeekdayHeaderTextBlockStyle}"/>
                    <TextBlock Grid.Row="0" Grid.Column="5" Text="Freitag" Style="{StaticResource WeekdayHeaderTextBlockStyle}"/>
                    <TextBlock Grid.Row="0" Grid.Column="6" Text="Samstag" Style="{StaticResource WeekdayHeaderTextBlockStyle}"/>
                    <TextBlock Grid.Row="0" Grid.Column="7" Text="Sonntag" Style="{StaticResource WeekdayHeaderTextBlockStyle}"/>

                    <ItemsControl ItemsSource="{Binding BoardEntries}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="7" Grid.RowSpan="7">
                        <!-- BoardEntries is the parameter type -->
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <controls:UniformGrid Columns="7" />
                                <!-- Create a columns for every weekday-->
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>

                            <DataTemplate>
                                <ItemsControl ItemsSource="{Binding}">
                                    <!--Take binding from above (pass it downwards)-->

                                    <!--Use the same binding as above-->
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <controls:UniformGrid Rows="7" />
                                            <!-- Create a row for every slot 1st, 2nd... of a day-->
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>

                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <!-- This is how the clicked slot is being passed -->
                                            <Button Command="{Binding ElementName=grid_container, Path=DataContext.SelectSlotCommand}"
                                                    CommandParameter="{Binding}" 
                                                    Style="{StaticResource ButtonWithConditionalToolTipStyle}" 
                                                    BorderThickness="0" Padding="0" Background="Transparent" 
                                                    VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch">

                                                <Border Style="{StaticResource Slot_BoardStyle}">
                                                    <!-- Take style from App.xaml Resources-->
                                                    <!-- Border must contain a clickable type to forward a command-->

                                                    <TextBlock Text="{Binding DisplayText}"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           TextWrapping="Wrap"
                                                           FontSize="12"
                                                           TextAlignment="Center" />


                                                    <!-- TODO make sure to avoid text overflow (auto breakline and font rezise) for up to 32 characters! -->
                                                    <!-- actual text block lying within grid cells (goal of the whole action here), containing binding from 2d observable collection-->
                                                </Border>
                                            </Button>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>

                                </ItemsControl>
                            </DataTemplate>

                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
